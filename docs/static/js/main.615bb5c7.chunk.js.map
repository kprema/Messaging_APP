{"version":3,"sources":["components/actions/addContactAction.js","components/AddContactForm.js","components/ContactList.js","components/MsgDisplay.js","components/MsgForm.js","components/reducers/addContactReducer.js","components/reducers/msgReducer.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["addMSG","data","type","connect","props","useState","values","setValues","handleChange","e","target","name","value","className","onSubmit","preventDefault","dispatch","placeholder","firstName","onChange","required","lastName","phone","email","onClick","state","contacts","useEffect","JSON","parse","localStorage","getItem","populateContacts","class","id","map","contact","i","messaging","msg","msgitem","INITIAL_VALUE","message","contactsDefaultState","addContactReducer","action","setItem","stringify","msgDefaultState","addmsgReducer","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","msgboxshow","setmsgboxshow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAaaA,EAAS,SAACC,GAAD,MAAW,CAC/BC,KAAM,UACND,S,OCsGaE,iBAjHQ,SAACC,GAAW,IAAD,EACJC,mBAAS,IADL,mBACzBC,EADyB,KACjBC,EADiB,KAW1BC,EAAe,SAACC,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAe9B,OACE,gCACE,sBAAKC,UAAU,wCAAf,UACE,sBAAMA,UAAU,mCAChB,kDAGF,qBAAKA,UAAU,mBACf,mBAAGA,UAAU,UAAb,qBAEA,uBAAMC,SArCW,SAACL,GACpBA,EAAEM,iBACFX,EAAMY,SDPiC,CACzCd,KAAM,cACND,KCMqB,CACfA,KAAMK,MAiCsBO,UAAU,aAAxC,UACE,sBAAKA,UAAU,qCAAf,UACE,gCACE,sBAAMA,UAAU,+BAGlB,uBACEF,KAAK,YACLT,KAAK,OACLe,YAAY,aACZL,MAAON,EAAOY,UACdC,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BW,UAAQ,OAGZ,sBAAKP,UAAU,qCAAf,UACE,0BACA,8BACE,uBACEF,KAAK,WACLT,KAAK,OACLe,YAAY,YACZL,MAAON,EAAOe,SACdF,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BW,UAAQ,SAKd,sBAAKP,UAAU,sCAAf,UACE,gCACE,sBAAMA,UAAU,mCAGlB,uBACEF,KAAK,QACLT,KAAK,SACLe,YAAY,eACZL,MAAON,EAAOgB,MACdH,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BW,UAAQ,OAGZ,sBAAKP,UAAU,qCAAf,UACE,gCACE,sBAAMA,UAAU,mCAElB,8BACE,uBACEF,KAAK,QACLT,KAAK,QACLe,YAAY,QACZL,MAAON,EAAOiB,MACdJ,SAAU,SAACV,GAAD,OAAOD,EAAaC,IAC9BW,UAAQ,SAKd,sBAAKP,UAAU,YAAf,UACE,wBAAQX,KAAK,SAASW,UAAU,yBAAhC,oBAGA,wBACEX,KAAK,QACLW,UAAU,0BACVW,QAvFI,SAACf,GASbF,EARsB,CACpB,CACEW,UAAW,GACXG,SAAU,GACVC,MAAO,GACPC,MAAO,OA8EL,iCCjDKpB,eALS,SAACsB,GACvB,MAAO,CACLC,SAAUD,EAAMC,YAGLvB,EArDK,SAACC,GAAW,IACvBsB,EAAsBtB,EAAtBsB,SAAUV,EAAYZ,EAAZY,SAQjB,OAPAW,qBAAU,WACR,IAAM1B,EAAO2B,KAAKC,MAAMC,aAAaC,QAAQ,aACzC9B,GACFe,EFF0B,SAACf,GAAD,MAAW,CACzCC,KAAM,oBACND,QEAa+B,CAAiB/B,MAE3B,IAGD,gCACE,+BACE,qBAAKgC,MAAM,aAAX,SACE,sBAAKA,MAAM,0BAAX,UACE,sBAAMA,MAAM,qDACZ,uBACE/B,KAAK,OACLW,UAAU,4BACVqB,GAAG,kBACHjB,YAAY,WAEd,sBAAMgB,MAAM,0DAIlB,mBAAGpB,UAAU,kBAAb,sBAEA,oBAAIA,UAAU,eAAd,SACGa,EAASS,KAAI,SAACC,EAASC,GAAV,OACZ,qBAEExB,UAAU,iDACVW,QAASpB,EAAMkC,UAHjB,UAIE,sBAAMzB,UAAU,WAChB,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBuB,EAAQnC,KAAKiB,YACrC,sBAAML,UAAU,UAAhB,SAA2BuB,EAAQnC,KAAKqB,QACxC,sBAAMT,UAAU,OAAhB,qBAEF,sBAAMA,UAAU,sCAChB,sBAAMA,UAAU,2CAVXwB,cCCFlC,eALS,SAACsB,GACvB,MAAO,CACLc,IAAKd,EAAMc,OAGApC,EA/BI,SAACC,GAAW,IACtBmC,EAAiBnC,EAAjBmC,IAAKvB,EAAYZ,EAAZY,SAOZ,OANAW,qBAAU,WACR,IAAM1B,EAAO2B,KAAKC,MAAMC,aAAaC,QAAQ,QACzC9B,GACFe,EAAShB,EAAOC,MAEjB,IAED,gCACE,sBAAKY,UAAU,wCAAf,UACE,sBAAMA,UAAU,mCAChB,kDAEF,oBAAIA,UAAU,WAAd,SACG0B,EAAIJ,KAAI,SAACK,GAAD,OACP,qBAAI3B,UAAU,SAAd,UACE,sBAAMA,UAAU,WAChB,sBAAMA,UAAU,MAAhB,SAAuB2B,kBCqBpBrC,qBAvCf,SAAiBC,GAAQ,IAAD,EACMC,mBAAS,IADf,mBACfC,EADe,KACPC,EADO,KAEhBkC,EAAgB,CACpBC,QAAS,IAmBX,OACE,8BACE,uBAAM5B,SAZM,SAACL,GACfA,EAAEM,iBACFX,EAAMY,SACJhB,EAAO,CACLM,YAGJC,EAAUkC,IAKiB5B,UAAU,YAAnC,UACE,uBACEX,KAAK,OACLS,KAAK,UACLC,MAAON,EAAOoC,QACdvB,SAAU,SAACV,GAAD,OAxBG,SAACA,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAqBLJ,CAAaC,MAEhC,wBAAQP,KAAK,SAAb,SACE,sBAAMW,UAAU,uC,sBCpCpB8B,EAAuB,GAgBdC,EAdW,WAA2C,IAA1CnB,EAAyC,uDAAjCkB,EAAsBE,EAAW,uCAClE,OAAQA,EAAO3C,MACb,IAAK,cAEH,OADA4B,aAAagB,QAAQ,WAAYlB,KAAKmB,UAAL,sBAAmBtB,GAAnB,CAA0BoB,EAAO5C,SAC5D,GAAN,mBAAWwB,GAAX,CAAkBoB,EAAO5C,OAE3B,IAAK,oBACH,OAAO4C,EAAO5C,KAEhB,QACE,OAAOwB,ICZPuB,EAAkB,CAAC,KAAM,eAahBC,EAXc,WAAsC,IAArCxB,EAAoC,uDAA5BuB,EAAiBH,EAAW,uCAEhE,OADAK,QAAQC,IAAI1B,GACJoB,EAAO3C,MACb,IAAK,UAEH,OADA4B,aAAagB,QAAQ,MAAOlB,KAAKmB,UAAL,sBAAmBtB,GAAnB,CAA0BoB,EAAO5C,SACvD,GAAN,mBAAWwB,GAAX,CAAkBoB,EAAO5C,KAAKK,OAAOoC,UACvC,QACE,OAAOjB,ICHP2B,EACe,qBAAXC,QACNA,OAAOC,sCACTC,IASaC,EARDC,YACZC,YAAgB,CACdhC,SAAUkB,EACVL,IAAKU,IARY,GAWnBG,EAAiBO,YAAgBC,O,MCuBpBC,MA7Bf,WAAgB,IAAD,EACuBxD,oBAAS,GADhC,mBACNyD,EADM,KACMC,EADN,KAOb,OACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,qBAAK3C,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,CAAayB,UAVL,WAChByB,EAAc,CACZD,YAAY,SAUR,qBAAKjD,UAAU,uBAAf,SACGiD,EACC,gCACE,cAAC,EAAD,IADF,IACiB,cAAC,EAAD,OAGjB,cAAC,EAAD,cClBCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.615bb5c7.chunk.js","sourcesContent":["// ADD_CONTACT\nexport const addContactAction = (data) => ({\n  type: 'ADD_CONTACT',\n  data,\n});\n\n// POPULATE\nexport const populateContacts = (data) => ({\n  type: 'POPULATE_CONTACTS',\n  data,\n});\n\n// ADD_MSG\nexport const addMSG = (data) => ({\n  type: 'ADD_MSG',\n  data,\n});\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {addContactAction} from './actions/addContactAction';\n\nconst AddContactForm = (props) => {\n  const [values, setValues] = useState({});\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.dispatch(\n      addContactAction({\n        data: values,\n      })\n    );\n  };\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const reset = (e) => {\n    const INITIAL_STATE = [\n      {\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n      },\n    ];\n    setValues(INITIAL_STATE);\n  };\n  return (\n    <div>\n      <div className='new-contact d-flex align-items-center'>\n        <span className='glyphicon glyphicon-arrow-left'></span>\n        <span>NEW CONTACT</span>\n      </div>\n\n      <div className='profile-avatar'></div>\n      <p className='profile'>PROFILE</p>\n\n      <form onSubmit={handleSubmit} className='createform'>\n        <div className='col-md-6 d-flex align-items-center'>\n          <label>\n            <span className='glyphicon glyphicon-user'></span>\n          </label>\n\n          <input\n            name='firstName'\n            type='text'\n            placeholder='First Name'\n            value={values.firstName}\n            onChange={(e) => handleChange(e)}\n            required\n          />\n        </div>\n        <div className='col-md-6 d-flex align-items-center'>\n          <label></label>\n          <div>\n            <input\n              name='lastName'\n              type='text'\n              placeholder='Last Name'\n              value={values.lastName}\n              onChange={(e) => handleChange(e)}\n              required\n            />\n          </div>\n        </div>\n\n        <div className='col-md-12 d-flex align-items-center'>\n          <label>\n            <span className='glyphicon glyphicon-earphone'></span>\n          </label>\n\n          <input\n            name='phone'\n            type='number'\n            placeholder='Phone Number'\n            value={values.phone}\n            onChange={(e) => handleChange(e)}\n            required\n          />\n        </div>\n        <div className='col-md-6 d-flex align-items-center'>\n          <label>\n            <span className='glyphicon glyphicon-envelope'></span>\n          </label>\n          <div>\n            <input\n              name='email'\n              type='email'\n              placeholder='Email'\n              value={values.email}\n              onChange={(e) => handleChange(e)}\n              required\n            />\n          </div>\n        </div>\n\n        <div className='col-md-12'>\n          <button type='submit' className='btn btn-secondary save'>\n            Submit\n          </button>\n          <button\n            type='reset'\n            className='btn btn-secondary reset'\n            onClick={reset}>\n            Discard\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default connect()(AddContactForm);\n","import {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {populateContacts} from '../components/actions/addContactAction';\n\nconst ContactList = (props) => {\n  const {contacts, dispatch} = props;\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    if (data) {\n      dispatch(populateContacts(data));\n    }\n  }, []);\n\n  return (\n    <div>\n      <form>\n        <div class='form-group'>\n          <div class='form-group has-feedback'>\n            <span class='glyphicon glyphicon-search form-control-feedback'></span>\n            <input\n              type='text'\n              className='form-control search-input'\n              id='inputValidation'\n              placeholder='Search'\n            />\n            <span class='glyphicon glyphicon-plus form-control-feedback'></span>\n          </div>\n        </div>\n      </form>\n      <p className='contact-heading'>Contacts</p>\n\n      <ul className='contact-list'>\n        {contacts.map((contact, i) => (\n          <li\n            key={i}\n            className='d-flex align-items-center justify-space-around'\n            onClick={props.messaging}>\n            <span className='avatar'></span>\n            <div className='details'>\n              <span className='name'>{contact.data.firstName}</span>\n              <span className='phoneNo'>{contact.data.phone}</span>\n              <span className='time'>5min</span>\n            </div>\n            <span className='call glyphicon glyphicon-earphone'></span>\n            <span className='message glyphicon glyphicon-envelope'></span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts,\n  };\n};\nexport default connect(mapStateToProps)(ContactList);\n","import {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {addMSG} from './actions/addContactAction';\n\nconst MsgDisplay = (props) => {\n  const {msg, dispatch} = props;\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('msg'));\n    if (data) {\n      dispatch(addMSG(data));\n    }\n  }, []);\n  return (\n    <div>\n      <div className='new-contact d-flex align-items-center'>\n        <span className='glyphicon glyphicon-arrow-left'></span>\n        <span>NEW CONTACT</span>\n      </div>\n      <ul className='msgItems'>\n        {msg.map((msgitem) => (\n          <li className='d-flex'>\n            <span className='avatar'></span>\n            <span className='msg'>{msgitem}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    msg: state.msg,\n  };\n};\nexport default connect(mapStateToProps)(MsgDisplay);\n","import {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {addMSG} from './actions/addContactAction';\n\nfunction MsgForm(props) {\n  const [values, setValues] = useState('');\n  const INITIAL_VALUE = {\n    message: '',\n  };\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const msgForm = (e) => {\n    e.preventDefault();\n    props.dispatch(\n      addMSG({\n        values,\n      })\n    );\n    setValues(INITIAL_VALUE);\n  };\n\n  return (\n    <div>\n      <form onSubmit={msgForm} className='msg__form'>\n        <input\n          type='text'\n          name='message'\n          value={values.message}\n          onChange={(e) => handleChange(e)}\n        />\n        <button type='submit'>\n          <span className='glyphicon glyphicon-send'></span>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default connect()(MsgForm);\n","const contactsDefaultState = [];\n\nconst addContactReducer = (state = contactsDefaultState, action) => {\n  switch (action.type) {\n    case 'ADD_CONTACT':\n      localStorage.setItem('contacts', JSON.stringify([...state, action.data]));\n      return [...state, action.data];\n\n    case 'POPULATE_CONTACTS':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default addContactReducer;\n","const msgDefaultState = ['Hi', 'How are you'];\n\nexport const addmsgReducer = (state = msgDefaultState, action) => {\n  console.log(state);\n  switch (action.type) {\n    case 'ADD_MSG':\n      localStorage.setItem('msg', JSON.stringify([...state, action.data]));\n      return [...state, action.data.values.message];\n    default:\n      return state;\n  }\n};\n\nexport default addmsgReducer;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport addContactReducer from './components/reducers/addContactReducer';\nimport addmsgReducer from './components/reducers/msgReducer';\n\nconst initialState = {};\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\nconst store = createStore(\n  combineReducers({\n    contacts: addContactReducer,\n    msg: addmsgReducer,\n  }),\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\nexport default store;\n","import {useState} from 'react';\nimport AddContactForm from './components/AddContactForm';\nimport ContactList from './components/ContactList';\nimport MsgDisplay from './components/MsgDisplay';\nimport MsgForm from './components/MsgForm';\nimport store from './store';\n\nimport './App.css';\nimport {Provider} from 'react-redux';\n\nfunction App() {\n  const [msgboxshow, setmsgboxshow] = useState(false);\n  const messaging = () => {\n    setmsgboxshow({\n      msgboxshow: true,\n    });\n  };\n  return (\n    <Provider store={store}>\n      <div className='App container'>\n        <div className='row'>\n          <div className='col-sm-4 left-panel'>\n            <ContactList messaging={messaging} />\n          </div>\n          <div className='col-sm-8 right-panel'>\n            {msgboxshow ? (\n              <div>\n                <MsgDisplay /> <MsgForm />\n              </div>\n            ) : (\n              <AddContactForm />\n            )}\n          </div>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}